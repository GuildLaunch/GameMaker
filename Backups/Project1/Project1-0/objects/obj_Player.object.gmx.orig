<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();
globalvar rateOfFire;
globalvar rateOfFireInit;
globalvar noShots;
globalvar missilesActive;
globalvar lastMissile;
globalvar shieldActive;
shieldActive = 0;
lastMissile = 10;
rateOfFireInit = 10;
rateOfFire = rateOfFireInit;
noShots = 0;
spd=12;
missilesActive=0;
missileCount=0;
missilePowerupLevel=0;
maxMissileCount=15;
missileTimerInit = 900;
missileTimer = 0;
globalvar laserPowerUpTimeInit;
globalvar laserPowerUp;
laserPowerUpTimeInit = 30;
laserPowerUp = 0;
laserPowerUpNoShot = 0;
laserPowerUpRateOfFireInit = 10;
laserPowerUpRateOfFire = laserPowerUpRateOfFireInit;
/// reset score
score=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>horizontal_value = gamepad_axis_value(0,gp_axislh);
scaled_horizontal_value = round(spd*horizontal_value);

vertical_value = gamepad_axis_value(0,gp_axislv);
scaled_vertical_value = round(spd*vertical_value);



///show_debug_message(scaled_vertical_value);

draw_text(50, 0, gamepad_axis_value(0,gp_axislh));

if (horizontal_value &gt; 0.2 || vertical_value &gt; 0.2 || horizontal_value &lt; -0.2 || vertical_value &lt; -0.2)
{
    if place_free(x+scaled_horizontal_value,y) &amp;&amp; place_free(x,y+scaled_vertical_value){
            new_x_mod=scaled_horizontal_value;
            new_y_mod=scaled_vertical_value;
    }else if place_free(x+1,y) || place_free(x,y+1){
         while(!place_free(x+scaled_horizontal_value,y) &amp;&amp; scaled_horizontal_value != 0){
            if (scaled_horizontal_value &gt; 0)
            {
                scaled_horizontal_value-=1;
            }else{
                scaled_horizontal_value+=1;
            }
         }
         while(!place_free(x,y+scaled_vertical_value) &amp;&amp; scaled_vertical_value != 0){
            if (scaled_vertical_value &gt; 0)
            {
                scaled_vertical_value-=1;
            }else{
                scaled_vertical_value+=1;
            }
         }
         if (floor(scaled_horizontal_value) &lt; 1280 &amp;&amp; floor(scaled_vertical_value))
         {
            new_x_mod=floor(scaled_horizontal_value);
            new_y_mod=floor(scaled_vertical_value);
         }
    }
    
    if ((x+floor(new_x_mod)) &lt; 1270 &amp;&amp; (y+floor(new_y_mod) &lt; 650) &amp;&amp; (x+floor(new_x_mod) &gt; -2) &amp;&amp; (y+floor(new_y_mod) &gt; 5))
    {
       x+=new_x_mod;
       y+=new_y_mod;
    }    
}

if (noShots &lt; rateOfFire)
{
noShots+=1;
}
else
{
noShots = 0;
instance_create(x+5,y,obj_Laser);
}

if (laserPowerUp &gt; 0)
{
    if (laserPowerUpNoShot &lt; laserPowerUpRateOfFire){
        laserPowerUpNoShot+=1;
    }else{
        laserPowerUpNoShot = 0;
        instance_create(x+5,y+30,obj_Laser);
        instance_create(x+5,y-30,obj_Laser);
    }
} 

if (missilesActive == 1)
{
    if (missileCount &gt; maxMissileCount){
        rand_spawn_point = choose(40,0,-40);
        instance_create(x+10,y+rand_spawn_point,obj_Missile);
        missileCount = 0;
    }else{
        missileCount+=1;
    }
    missileTimer-=1;
    if (missileTimer &lt; 0)
    {
        missilesActive = 0;
        missilePowerupLevel = 0;
    }
}
lastMissile-=1;

if (shieldActive &gt; 0)
{
    sprite_index = spr_PlayerShielded;
}else{
    sprite_index = spr_Player;
}


///GameOver Lawl
if(score&lt;-10)
{
room_goto(rm_GameOver);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_ShieldPowerUp">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shieldActive=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_PowerUpMissile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>missilesActive = 1;
missilePowerupLevel+=1;
if (missilePowerupLevel &gt; 0)
{
maxMissileCount = 10;
}
if (missilePowerupLevel &lt; 3)
{
missileTimer+=missileTimerInit;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
<<<<<<< HEAD
            <string>shieldActive-=1;
if (shieldActive &lt; 0){
    instance_create(x,y,obj_Splosion);
    instance_destroy();
    room_goto(rm_GameOver);
}else{

}

=======
            <string>instance_create(x,y,obj_Splosion);
instance_destroy();
room_goto(rm_GameOver);
>>>>>>> dd08010c3d37c19eda1c86f90a35e8e0a147a590
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
